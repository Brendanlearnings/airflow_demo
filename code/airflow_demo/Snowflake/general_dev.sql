/* Create the database and schema that we will be running the demo in */
CREATE DATABASE DEMO;
USE DATABASE DEMO;
DROP SCHEMA PUBLIC;
CREATE SCHEMA DEMO_SCHEMA;

/* Create empty table that resemble the sample data tables given by snowflake */
USE SCHEMA DEMO_SCHEMA;


CREATE TABLE DEMO.DEMO_SCHEMA.CUSTOMER AS
SELECT TOP 0 *
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.CUSTOMER;

CREATE TABLE DEMO.DEMO_SCHEMA.LINEITEM AS
SELECT TOP 0 *
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.LINEITEM;

CREATE TABLE DEMO.DEMO_SCHEMA.NATION AS
SELECT TOP 0 *
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.NATION;

CREATE TABLE DEMO.DEMO_SCHEMA.ORDERS AS
SELECT TOP 0 *
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.ORDERS;

CREATE TABLE DEMO.DEMO_SCHEMA.PART AS
SELECT TOP 0 *
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.PART;

CREATE TABLE DEMO.DEMO_SCHEMA.PARTSUPP AS
SELECT TOP 0 *
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.PARTSUPP;

CREATE TABLE DEMO.DEMO_SCHEMA.REGION AS
SELECT TOP 0 *
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.REGION;

CREATE TABLE DEMO.DEMO_SCHEMA.SUPPLIER AS
SELECT TOP 0 *
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.SUPPLIER;


/* Enable CDC for each of the tables. */

CREATE OR REPLACE STREAM CDC_CUSTOMER ON TABLE DEMO.DEMO_SCHEMA.CUSTOMER;
CREATE OR REPLACE STREAM CDC_LINEITEM ON TABLE DEMO.DEMO_SCHEMA.LINEITEM;
CREATE OR REPLACE STREAM CDC_NATION ON TABLE DEMO.DEMO_SCHEMA.NATION;
CREATE OR REPLACE STREAM CDC_ORDERS ON TABLE DEMO.DEMO_SCHEMA.ORDERS;
CREATE OR REPLACE STREAM CDC_PART ON TABLE DEMO.DEMO_SCHEMA.PART;
CREATE OR REPLACE STREAM CDC_PARTSUPP ON TABLE DEMO.DEMO_SCHEMA.PARTSUPP;
CREATE OR REPLACE STREAM CDC_REGION ON TABLE DEMO.DEMO_SCHEMA.REGION;
CREATE OR REPLACE STREAM CDC_SUPPLIER ON TABLE DEMO.DEMO_SCHEMA.SUPPLIER;

/* Sample a 1M record set and insert it into the staging tables (Historical load) */
INSERT INTO DEMO.DEMO_SCHEMA.CUSTOMER
(
C_CUSTKEY
,C_NAME
,C_ADDRESS
,C_NATIONKEY
,C_PHONE
,C_ACCTBAL
,C_MKTSEGMENT
,C_COMMENT
)
SELECT C_CUSTKEY
      ,C_NAME
      ,C_ADDRESS
      ,C_NATIONKEY
      ,C_PHONE
      ,C_ACCTBAL
      ,C_MKTSEGMENT
      ,C_COMMENT
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.CUSTOMER
SAMPLE (1000000 ROWS);

INSERT INTO DEMO.DEMO_SCHEMA.LINEITEM
(
L_ORDERKEY
,L_PARTKEY
,L_SUPPKEY
,L_LINENUMBER
,L_QUANTITY
,L_EXTENDEDPRICE
,L_DISCOUNT
,L_TAX
,L_RETURNFLAG
,L_LINESTATUS
,L_SHIPDATE
,L_COMMITDATE
,L_RECEIPTDATE
,L_SHIPINSTRUCT
,L_SHIPMODE
,L_COMMENT
)
SELECT L_ORDERKEY
      ,L_PARTKEY
      ,L_SUPPKEY
      ,L_LINENUMBER
      ,L_QUANTITY
      ,L_EXTENDEDPRICE
      ,L_DISCOUNT
      ,L_TAX
      ,L_RETURNFLAG
      ,L_LINESTATUS
      ,L_SHIPDATE
      ,L_COMMITDATE
      ,L_RECEIPTDATE
      ,L_SHIPINSTRUCT
      ,L_SHIPMODE
      ,L_COMMENT
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.LINEITEM
SAMPLE (1000000 ROWS);

INSERT INTO DEMO.DEMO_SCHEMA.NATION
(
N_NATIONKEY
,N_NAME
,N_REGIONKEY
,N_COMMENT
)
SELECT N_NATIONKEY
      ,N_NAME
      ,N_REGIONKEY
      ,N_COMMENT
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.NATION
SAMPLE (1000000 ROWS);

INSERT INTO DEMO.DEMO_SCHEMA.ORDERS
(
O_ORDERKEY
,O_CUSTKEY
,O_ORDERSTATUS
,O_TOTALPRICE
,O_ORDERDATE
,O_ORDERPRIORITY
,O_CLERK
,O_SHIPPRIORITY
,O_COMMENT
)
SELECT O_ORDERKEY
      ,O_CUSTKEY
      ,O_ORDERSTATUS
      ,O_TOTALPRICE
      ,O_ORDERDATE
      ,O_ORDERPRIORITY
      ,O_CLERK
      ,O_SHIPPRIORITY
      ,O_COMMENT
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.ORDERS
SAMPLE (1000000 ROWS);

INSERT INTO DEMO.DEMO_SCHEMA.PART
(
P_PARTKEY
,P_NAME
,P_MFGR
,P_BRAND
,P_TYPE
,P_SIZE
,P_CONTAINER
,P_RETAILPRICE
,P_COMMENT
)
SELECT P_PARTKEY
      ,P_NAME
      ,P_MFGR
      ,P_BRAND
      ,P_TYPE
      ,P_SIZE
      ,P_CONTAINER
      ,P_RETAILPRICE
      ,P_COMMENT
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.PART
SAMPLE (1000000 ROWS);

INSERT INTO DEMO.DEMO_SCHEMA.PARTSUPP
(
PS_PARTKEY
,PS_SUPPKEY
,PS_AVAILQTY
,PS_SUPPLYCOST
,PS_COMMENT
)
SELECT PS_PARTKEY
      ,PS_SUPPKEY
      ,PS_AVAILQTY
      ,PS_SUPPLYCOST
      ,PS_COMMENT
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.PARTSUPP
SAMPLE (1000000 ROWS);


INSERT INTO DEMO.DEMO_SCHEMA.REGION
(
R_REGIONKEY
,R_NAME
,R_COMMENT
)
SELECT R_REGIONKEY
      ,R_NAME
      ,R_COMMENT
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.REGION
SAMPLE (1000000 ROWS);

INSERT INTO DEMO.DEMO_SCHEMA.SUPPLIER
(
S_SUPPKEY
,S_NAME
,S_ADDRESS
,S_NATIONKEY
,S_PHONE
,S_ACCTBAL
,S_COMMENT
)
SELECT S_SUPPKEY
      ,S_NAME
      ,S_ADDRESS
      ,S_NATIONKEY
      ,S_PHONE
      ,S_ACCTBAL
      ,S_COMMENT
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.SUPPLIER
SAMPLE (1000000 ROWS);


/* Create the ETL to transform the data to dimensional model */
CREATE OR REPLACE VIEW DEMO.DEMO_SCHEMA.TRANSFORM_DIM_CUSTOMER AS 
SELECT CUST.C_CUSTKEY                      AS CUSTOMER_SK
      ,CUST.C_NAME                         AS CUSTOMER_NAME
      ,CUST.C_ADDRESS                      AS CUSTOMER_ADDRESS
      ,CUST.C_PHONE                        AS CUSTOMER_PHONE_NUMBER
      ,CUST.C_MKTSEGMENT                   AS CUSTOMER_MARKET_SEGMENT
      ,NAT.N_NAME                          AS CUSTOMER_NATION
      ,REG.R_NAME                          AS CUSTOMER_REGION
      ,current_timestamp                   AS MERGETIMESTAMP
  FROM DEMO.DEMO_SCHEMA.CUSTOMER           AS CUST
  JOIN DEMO.DEMO_SCHEMA.NATION        AS NAT  ON CUST.C_NATIONKEY = NAT.N_NATIONKEY
  JOIN DEMO.DEMO_SCHEMA.REGION        AS REG  ON NAT.N_REGIONKEY = REG.R_REGIONKEY;

  CREATE OR REPLACE STREAM STREAM_DIM_CUSTOMER ON VIEW DEMO.DEMO_SCHEMA.TRANSFORM_DIM_CUSTOMER;

 CREATE OR REPLACE TABLE DEMO.CONFORMED.DIM_CUSTOMER
 (
 CUSTOMER_PK INT IDENTITY NOT NULL,
 CUSTOMER_SK NUMBER(38,0) COMMENT 'JOIN',
 CUSTOMER_ADDRESS VARCHAR(40),
 CUSTOMER_PHONE_NUMBER VARCHAR(15),
 CUSTOMER_MARKET_SEGMENT VARCHAR(10),
 CUSTOMER_NATION VARCHAR(25),
 CUSTOMER_REGION VARCHAR(25),
 MERGETIMESTAMP TIMESTAMP
 );

 
SELECT *
  FROM DEMO.DEMO_SCHEMA.STREAM_DIM_CUSTOMER;

UPDATE DEMO.DEMO_SCHEMA.CUSTOMER SET C_NAME = 'customer name' WHERE C_CUSTKEY IN (4052874
,13597551
,12241570
,6451052
,12241585
,12241593
,12241601
,4729139
,12241616
,12241624
,4217822
,12241640
,1994394
,4277616
,1994409
,14389073
,1994426
,1994434
,1994442
,1994450
,1994458
,1994466
,1994474
,1994482
,1994490
,1994498
,11798444
,14396428
,1994521
,2948025
,4855440
,1994545
,4263921
,1994561
,4287995
,2226172
,4313291
,1994592
,12241649
,14219015
,13559893
,12241674
,13373682
,186163
,4070443
,2690479
,12241713
,12241721
,12241729
,8418117
,12241744
,1994601
,171244
,1994617
,1994624
,14382701
,14531199
,1994648
,1994656
,1994664
,1994671
,14516638
,1994687
,3730664
,12241751
,12790252
,12241766
,12241774
,12241782
,14005962
,12241798
,6493848
,12241813
,12241822
,12241830
,12595437
,12241846
,1686598
,1994709
,1994717
,1994725
,3649952
,1994741
,13852551
,1994756
,1994764
,1994772
,1994780
,1994788
,1672388
,14238222
,14238230
,14085178
,14060048
,14238254
,12148340
,14238270
,1861982
,14238286
,5785257);


SELECT TOP 100 *
  FROM DEMO.DEMO_SCHEMA.CUSTOMER;

CALL DEMO.CONFORMED.GENERIC_MERGE('DEMO.DEMO_SCHEMA.STREAM_DIM_CUSTOMER', 'DEMO.CONFORMED.DIM_CUSTOMER');

CALL DEMO.CONFORMED.GENERIC_MERGE('DEMO.DEMO_SCHEMA.STREAM_DIM_CUSTOMER', 'DEMO.CONFORMED.DIM_CUSTOMER');

SELECT TOP 10 * FROM DEMO.LANDING.CDC_PART WHERE P_PARTKEY = 14835761;

UPDATE DEMO.LANDING.PART SET P_NAME = 'TEST' WHERE P_PARTKEY = 14835761;


CREATE TABLE DEMO.LANDING.CUSTOMER_TEST AS
SELECT TOP 0 *,
       current_timestamp() AS TMSP
  FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.CUSTOMER;

  SELECT *,
         hash(C_CUSTKEY,C_NAME,C_ADDRESS,C_NATIONKEY,C_PHONE,C_ACCTBAL,C_MKTSEGMENT,C_COMMENT) AS HASH_KEY
    FROM DEMO.LANDING.CUSTOMER_TEST
    ORDER BY C_CUSTKEY;
INSERT INTO DEMO.LANDING.CUSTOMER_TEST VALUES (
13065175,	'Customer#013065175',	'Au0tCUgrDN1aJf',	1,	'11-806-128-6174',	9343.37,	'AUTOMOBILE',	'ounts boost furiously unusual', current_timestamp()
)
    INSERT INTO DEMO.LANDING.CUSTOMER_TEST
    SELECT *,
           current_timestamp() AS TMSP
      FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.CUSTOMER
      SAMPLE (5 ROWS);

CREATE OR REPLACE VIEW DEMO.LANDING.CUSTOMER_DELTA AS 

     SELECT BASE.C_CUSTKEY
           ,BASE.C_NAME
           ,BASE.C_ADDRESS
           ,BASE.C_NATIONKEY
           ,BASE.C_PHONE
           ,BASE.C_ACCTBAL
           ,BASE.C_MKTSEGMENT
           ,BASE.C_COMMENT
      FROM DEMO.LANDING.CUSTOMER_TEST         AS BASE 
     INNER JOIN DEMO.LANDING.CUSTOMER_TEST    AS MX  ON BASE.C_CUSTKEY = MX.C_CUSTKEY 
     WHERE BASE.C_CUSTKEY = MX.C_CUSTKEY AND 
           BASE.TMSP = MAX(MX.TMSP)
    ;

CREATE OR REPLACE STREAM DEMO.LANDING.CUSTOMER_DELTA_CDC ON VIEW DEMO.LANDING.CUSTOMER_DELTA;





